//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: flow/access/access.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// AccessAPI is the public-facing API provided by access nodes.
///
/// Usage: instantiate `Flow_Access_AccessAPIClient`, then call methods of this protocol to make API calls.
public protocol Flow_Access_AccessAPIClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? { get }

  func ping(
    _ request: Flow_Access_PingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_PingRequest, Flow_Access_PingResponse>

  func getLatestBlockHeader(
    _ request: Flow_Access_GetLatestBlockHeaderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse>

  func getBlockHeaderByID(
    _ request: Flow_Access_GetBlockHeaderByIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse>

  func getBlockHeaderByHeight(
    _ request: Flow_Access_GetBlockHeaderByHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse>

  func getLatestBlock(
    _ request: Flow_Access_GetLatestBlockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse>

  func getBlockByID(
    _ request: Flow_Access_GetBlockByIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse>

  func getBlockByHeight(
    _ request: Flow_Access_GetBlockByHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse>

  func getCollectionByID(
    _ request: Flow_Access_GetCollectionByIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse>

  func sendTransaction(
    _ request: Flow_Access_SendTransactionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse>

  func getTransaction(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse>

  func getTransactionResult(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse>

  func getTransactionResultByIndex(
    _ request: Flow_Access_GetTransactionByIndexRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse>

  func getTransactionResultsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse>

  func getTransactionsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse>

  func getAccount(
    _ request: Flow_Access_GetAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse>

  func getAccountAtLatestBlock(
    _ request: Flow_Access_GetAccountAtLatestBlockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse>

  func getAccountAtBlockHeight(
    _ request: Flow_Access_GetAccountAtBlockHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse>

  func executeScriptAtLatestBlock(
    _ request: Flow_Access_ExecuteScriptAtLatestBlockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse>

  func executeScriptAtBlockID(
    _ request: Flow_Access_ExecuteScriptAtBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse>

  func executeScriptAtBlockHeight(
    _ request: Flow_Access_ExecuteScriptAtBlockHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse>

  func getEventsForHeightRange(
    _ request: Flow_Access_GetEventsForHeightRangeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse>

  func getEventsForBlockIDs(
    _ request: Flow_Access_GetEventsForBlockIDsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse>

  func getNetworkParameters(
    _ request: Flow_Access_GetNetworkParametersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse>

  func getLatestProtocolStateSnapshot(
    _ request: Flow_Access_GetLatestProtocolStateSnapshotRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse>

  func getExecutionResultForBlockID(
    _ request: Flow_Access_GetExecutionResultForBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse>
}

extension Flow_Access_AccessAPIClientProtocol {
  public var serviceName: String {
    return "flow.access.AccessAPI"
  }

  /// Ping is used to check if the access node is alive and healthy.
  ///
  /// - Parameters:
  ///   - request: Request to send to Ping.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func ping(
    _ request: Flow_Access_PingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_PingRequest, Flow_Access_PingResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  /// GetLatestBlockHeader gets the latest sealed or unsealed block header.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLatestBlockHeader.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLatestBlockHeader(
    _ request: Flow_Access_GetLatestBlockHeaderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlockHeader.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockHeaderInterceptors() ?? []
    )
  }

  /// GetBlockHeaderByID gets a block header by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockHeaderByID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockHeaderByID(
    _ request: Flow_Access_GetBlockHeaderByIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByIDInterceptors() ?? []
    )
  }

  /// GetBlockHeaderByHeight gets a block header by height.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockHeaderByHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockHeaderByHeight(
    _ request: Flow_Access_GetBlockHeaderByHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByHeightInterceptors() ?? []
    )
  }

  /// GetLatestBlock gets the full payload of the latest sealed or unsealed
  /// block.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLatestBlock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLatestBlock(
    _ request: Flow_Access_GetLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockInterceptors() ?? []
    )
  }

  /// GetBlockByID gets a full block by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockByID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockByID(
    _ request: Flow_Access_GetBlockByIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByIDInterceptors() ?? []
    )
  }

  /// GetBlockByHeight gets a full block by height.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockByHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockByHeight(
    _ request: Flow_Access_GetBlockByHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockByHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByHeightInterceptors() ?? []
    )
  }

  /// GetCollectionByID gets a collection by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCollectionByID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCollectionByID(
    _ request: Flow_Access_GetCollectionByIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getCollectionByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCollectionByIDInterceptors() ?? []
    )
  }

  /// SendTransaction submits a transaction to the network.
  ///
  /// - Parameters:
  ///   - request: Request to send to SendTransaction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func sendTransaction(
    _ request: Flow_Access_SendTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.sendTransaction.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendTransactionInterceptors() ?? []
    )
  }

  /// GetTransaction gets a transaction by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransaction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransaction(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransaction.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionInterceptors() ?? []
    )
  }

  /// GetTransactionResult gets the result of a transaction.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionResult.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionResult(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResult.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultInterceptors() ?? []
    )
  }

  /// GetTransactionResultByIndex gets the result of a transaction at a specified
  /// block and index
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionResultByIndex.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionResultByIndex(
    _ request: Flow_Access_GetTransactionByIndexRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultByIndex.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultByIndexInterceptors() ?? []
    )
  }

  /// GetTransactionResultsByBlockID gets all the transaction results for a
  /// specified block
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionResultsByBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionResultsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultsByBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultsByBlockIDInterceptors() ?? []
    )
  }

  /// GetTransactionsByBlockID gets all the transactions for a specified block
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionsByBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionsByBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionsByBlockIDInterceptors() ?? []
    )
  }

  /// GetAccount is an alias for GetAccountAtLatestBlock.
  ///
  /// Warning: this function is deprecated. It behaves identically to
  /// GetAccountAtLatestBlock and will be removed in a future version.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccount(
    _ request: Flow_Access_GetAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountInterceptors() ?? []
    )
  }

  /// GetAccountAtLatestBlock gets an account by address from the latest sealed
  /// execution state.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccountAtLatestBlock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccountAtLatestBlock(
    _ request: Flow_Access_GetAccountAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtLatestBlockInterceptors() ?? []
    )
  }

  /// GetAccountAtBlockHeight gets an account by address at the given block
  /// height
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccountAtBlockHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccountAtBlockHeight(
    _ request: Flow_Access_GetAccountAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtBlockHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtBlockHeightInterceptors() ?? []
    )
  }

  /// ExecuteScriptAtLatestBlock executes a read-only Cadence script against the
  /// latest sealed execution state.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteScriptAtLatestBlock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func executeScriptAtLatestBlock(
    _ request: Flow_Access_ExecuteScriptAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtLatestBlockInterceptors() ?? []
    )
  }

  /// ExecuteScriptAtBlockID executes a ready-only Cadence script against the
  /// execution state at the block with the given ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteScriptAtBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func executeScriptAtBlockID(
    _ request: Flow_Access_ExecuteScriptAtBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockIDInterceptors() ?? []
    )
  }

  /// ExecuteScriptAtBlockHeight executes a ready-only Cadence script against the
  /// execution state at the given block height.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteScriptAtBlockHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func executeScriptAtBlockHeight(
    _ request: Flow_Access_ExecuteScriptAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockHeightInterceptors() ?? []
    )
  }

  /// GetEventsForHeightRange retrieves events emitted within the specified block
  /// range.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEventsForHeightRange.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEventsForHeightRange(
    _ request: Flow_Access_GetEventsForHeightRangeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getEventsForHeightRange.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForHeightRangeInterceptors() ?? []
    )
  }

  /// GetEventsForBlockIDs retrieves events for the specified block IDs and event
  /// type.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEventsForBlockIDs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEventsForBlockIDs(
    _ request: Flow_Access_GetEventsForBlockIDsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getEventsForBlockIDs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForBlockIDsInterceptors() ?? []
    )
  }

  /// GetNetworkParameters retrieves the Flow network details
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNetworkParameters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNetworkParameters(
    _ request: Flow_Access_GetNetworkParametersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getNetworkParameters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNetworkParametersInterceptors() ?? []
    )
  }

  /// GetLatestProtocolStateSnapshot retrieves the latest sealed protocol state
  /// snapshot. Used by Flow nodes joining the network to bootstrap a
  /// space-efficient local state.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLatestProtocolStateSnapshot.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLatestProtocolStateSnapshot(
    _ request: Flow_Access_GetLatestProtocolStateSnapshotRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestProtocolStateSnapshot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestProtocolStateSnapshotInterceptors() ?? []
    )
  }

  /// GetExecutionResultForBlockID returns Execution Result for a given block.
  /// At present, Access Node might not have execution results for every block
  /// and as usual, until sealed, this data can change
  ///
  /// - Parameters:
  ///   - request: Request to send to GetExecutionResultForBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getExecutionResultForBlockID(
    _ request: Flow_Access_GetExecutionResultForBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse> {
    return self.makeUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getExecutionResultForBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetExecutionResultForBlockIDInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension Flow_Access_AccessAPIClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "Flow_Access_AccessAPINIOClient")
public final class Flow_Access_AccessAPIClient: Flow_Access_AccessAPIClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the flow.access.AccessAPI service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Flow_Access_AccessAPINIOClient: Flow_Access_AccessAPIClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol?

  /// Creates a client for the flow.access.AccessAPI service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
/// AccessAPI is the public-facing API provided by access nodes.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Flow_Access_AccessAPIAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? { get }

  func makePingCall(
    _ request: Flow_Access_PingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_PingRequest, Flow_Access_PingResponse>

  func makeGetLatestBlockHeaderCall(
    _ request: Flow_Access_GetLatestBlockHeaderRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse>

  func makeGetBlockHeaderByIDCall(
    _ request: Flow_Access_GetBlockHeaderByIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse>

  func makeGetBlockHeaderByHeightCall(
    _ request: Flow_Access_GetBlockHeaderByHeightRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse>

  func makeGetLatestBlockCall(
    _ request: Flow_Access_GetLatestBlockRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse>

  func makeGetBlockByIDCall(
    _ request: Flow_Access_GetBlockByIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse>

  func makeGetBlockByHeightCall(
    _ request: Flow_Access_GetBlockByHeightRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse>

  func makeGetCollectionByIDCall(
    _ request: Flow_Access_GetCollectionByIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse>

  func makeSendTransactionCall(
    _ request: Flow_Access_SendTransactionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse>

  func makeGetTransactionCall(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse>

  func makeGetTransactionResultCall(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse>

  func makeGetTransactionResultByIndexCall(
    _ request: Flow_Access_GetTransactionByIndexRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse>

  func makeGetTransactionResultsByBlockIDCall(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse>

  func makeGetTransactionsByBlockIDCall(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse>

  func makeGetAccountCall(
    _ request: Flow_Access_GetAccountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse>

  func makeGetAccountAtLatestBlockCall(
    _ request: Flow_Access_GetAccountAtLatestBlockRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse>

  func makeGetAccountAtBlockHeightCall(
    _ request: Flow_Access_GetAccountAtBlockHeightRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse>

  func makeExecuteScriptAtLatestBlockCall(
    _ request: Flow_Access_ExecuteScriptAtLatestBlockRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse>

  func makeExecuteScriptAtBlockIDCall(
    _ request: Flow_Access_ExecuteScriptAtBlockIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse>

  func makeExecuteScriptAtBlockHeightCall(
    _ request: Flow_Access_ExecuteScriptAtBlockHeightRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse>

  func makeGetEventsForHeightRangeCall(
    _ request: Flow_Access_GetEventsForHeightRangeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse>

  func makeGetEventsForBlockIdsCall(
    _ request: Flow_Access_GetEventsForBlockIDsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse>

  func makeGetNetworkParametersCall(
    _ request: Flow_Access_GetNetworkParametersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse>

  func makeGetLatestProtocolStateSnapshotCall(
    _ request: Flow_Access_GetLatestProtocolStateSnapshotRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse>

  func makeGetExecutionResultForBlockIDCall(
    _ request: Flow_Access_GetExecutionResultForBlockIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Flow_Access_AccessAPIAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Flow_Access_AccessAPIClientMetadata.serviceDescriptor
  }

  public var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makePingCall(
    _ request: Flow_Access_PingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_PingRequest, Flow_Access_PingResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  public func makeGetLatestBlockHeaderCall(
    _ request: Flow_Access_GetLatestBlockHeaderRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlockHeader.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockHeaderInterceptors() ?? []
    )
  }

  public func makeGetBlockHeaderByIDCall(
    _ request: Flow_Access_GetBlockHeaderByIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByIDInterceptors() ?? []
    )
  }

  public func makeGetBlockHeaderByHeightCall(
    _ request: Flow_Access_GetBlockHeaderByHeightRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByHeightInterceptors() ?? []
    )
  }

  public func makeGetLatestBlockCall(
    _ request: Flow_Access_GetLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockInterceptors() ?? []
    )
  }

  public func makeGetBlockByIDCall(
    _ request: Flow_Access_GetBlockByIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByIDInterceptors() ?? []
    )
  }

  public func makeGetBlockByHeightCall(
    _ request: Flow_Access_GetBlockByHeightRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockByHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByHeightInterceptors() ?? []
    )
  }

  public func makeGetCollectionByIDCall(
    _ request: Flow_Access_GetCollectionByIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getCollectionByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCollectionByIDInterceptors() ?? []
    )
  }

  public func makeSendTransactionCall(
    _ request: Flow_Access_SendTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.sendTransaction.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendTransactionInterceptors() ?? []
    )
  }

  public func makeGetTransactionCall(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransaction.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionInterceptors() ?? []
    )
  }

  public func makeGetTransactionResultCall(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResult.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultInterceptors() ?? []
    )
  }

  public func makeGetTransactionResultByIndexCall(
    _ request: Flow_Access_GetTransactionByIndexRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultByIndex.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultByIndexInterceptors() ?? []
    )
  }

  public func makeGetTransactionResultsByBlockIDCall(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultsByBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultsByBlockIDInterceptors() ?? []
    )
  }

  public func makeGetTransactionsByBlockIDCall(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionsByBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionsByBlockIDInterceptors() ?? []
    )
  }

  public func makeGetAccountCall(
    _ request: Flow_Access_GetAccountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountInterceptors() ?? []
    )
  }

  public func makeGetAccountAtLatestBlockCall(
    _ request: Flow_Access_GetAccountAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtLatestBlockInterceptors() ?? []
    )
  }

  public func makeGetAccountAtBlockHeightCall(
    _ request: Flow_Access_GetAccountAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtBlockHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtBlockHeightInterceptors() ?? []
    )
  }

  public func makeExecuteScriptAtLatestBlockCall(
    _ request: Flow_Access_ExecuteScriptAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtLatestBlockInterceptors() ?? []
    )
  }

  public func makeExecuteScriptAtBlockIDCall(
    _ request: Flow_Access_ExecuteScriptAtBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockIDInterceptors() ?? []
    )
  }

  public func makeExecuteScriptAtBlockHeightCall(
    _ request: Flow_Access_ExecuteScriptAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockHeightInterceptors() ?? []
    )
  }

  public func makeGetEventsForHeightRangeCall(
    _ request: Flow_Access_GetEventsForHeightRangeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getEventsForHeightRange.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForHeightRangeInterceptors() ?? []
    )
  }

  public func makeGetEventsForBlockIdsCall(
    _ request: Flow_Access_GetEventsForBlockIDsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getEventsForBlockIDs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForBlockIDsInterceptors() ?? []
    )
  }

  public func makeGetNetworkParametersCall(
    _ request: Flow_Access_GetNetworkParametersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getNetworkParameters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNetworkParametersInterceptors() ?? []
    )
  }

  public func makeGetLatestProtocolStateSnapshotCall(
    _ request: Flow_Access_GetLatestProtocolStateSnapshotRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestProtocolStateSnapshot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestProtocolStateSnapshotInterceptors() ?? []
    )
  }

  public func makeGetExecutionResultForBlockIDCall(
    _ request: Flow_Access_GetExecutionResultForBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getExecutionResultForBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetExecutionResultForBlockIDInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Flow_Access_AccessAPIAsyncClientProtocol {
  public func ping(
    _ request: Flow_Access_PingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_PingResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  public func getLatestBlockHeader(
    _ request: Flow_Access_GetLatestBlockHeaderRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_BlockHeaderResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlockHeader.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockHeaderInterceptors() ?? []
    )
  }

  public func getBlockHeaderByID(
    _ request: Flow_Access_GetBlockHeaderByIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_BlockHeaderResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByIDInterceptors() ?? []
    )
  }

  public func getBlockHeaderByHeight(
    _ request: Flow_Access_GetBlockHeaderByHeightRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_BlockHeaderResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByHeightInterceptors() ?? []
    )
  }

  public func getLatestBlock(
    _ request: Flow_Access_GetLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_BlockResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockInterceptors() ?? []
    )
  }

  public func getBlockByID(
    _ request: Flow_Access_GetBlockByIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_BlockResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByIDInterceptors() ?? []
    )
  }

  public func getBlockByHeight(
    _ request: Flow_Access_GetBlockByHeightRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_BlockResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getBlockByHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByHeightInterceptors() ?? []
    )
  }

  public func getCollectionByID(
    _ request: Flow_Access_GetCollectionByIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_CollectionResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getCollectionByID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCollectionByIDInterceptors() ?? []
    )
  }

  public func sendTransaction(
    _ request: Flow_Access_SendTransactionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_SendTransactionResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.sendTransaction.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendTransactionInterceptors() ?? []
    )
  }

  public func getTransaction(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_TransactionResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransaction.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionInterceptors() ?? []
    )
  }

  public func getTransactionResult(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_TransactionResultResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResult.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultInterceptors() ?? []
    )
  }

  public func getTransactionResultByIndex(
    _ request: Flow_Access_GetTransactionByIndexRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_TransactionResultResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultByIndex.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultByIndexInterceptors() ?? []
    )
  }

  public func getTransactionResultsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_TransactionResultsResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultsByBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultsByBlockIDInterceptors() ?? []
    )
  }

  public func getTransactionsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_TransactionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getTransactionsByBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionsByBlockIDInterceptors() ?? []
    )
  }

  public func getAccount(
    _ request: Flow_Access_GetAccountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_GetAccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountInterceptors() ?? []
    )
  }

  public func getAccountAtLatestBlock(
    _ request: Flow_Access_GetAccountAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_AccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtLatestBlockInterceptors() ?? []
    )
  }

  public func getAccountAtBlockHeight(
    _ request: Flow_Access_GetAccountAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_AccountResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtBlockHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtBlockHeightInterceptors() ?? []
    )
  }

  public func executeScriptAtLatestBlock(
    _ request: Flow_Access_ExecuteScriptAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_ExecuteScriptResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtLatestBlock.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtLatestBlockInterceptors() ?? []
    )
  }

  public func executeScriptAtBlockID(
    _ request: Flow_Access_ExecuteScriptAtBlockIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_ExecuteScriptResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockIDInterceptors() ?? []
    )
  }

  public func executeScriptAtBlockHeight(
    _ request: Flow_Access_ExecuteScriptAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_ExecuteScriptResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockHeight.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockHeightInterceptors() ?? []
    )
  }

  public func getEventsForHeightRange(
    _ request: Flow_Access_GetEventsForHeightRangeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_EventsResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getEventsForHeightRange.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForHeightRangeInterceptors() ?? []
    )
  }

  public func getEventsForBlockIDs(
    _ request: Flow_Access_GetEventsForBlockIDsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_EventsResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getEventsForBlockIDs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForBlockIDsInterceptors() ?? []
    )
  }

  public func getNetworkParameters(
    _ request: Flow_Access_GetNetworkParametersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_GetNetworkParametersResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getNetworkParameters.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNetworkParametersInterceptors() ?? []
    )
  }

  public func getLatestProtocolStateSnapshot(
    _ request: Flow_Access_GetLatestProtocolStateSnapshotRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_ProtocolStateSnapshotResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getLatestProtocolStateSnapshot.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestProtocolStateSnapshotInterceptors() ?? []
    )
  }

  public func getExecutionResultForBlockID(
    _ request: Flow_Access_GetExecutionResultForBlockIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Flow_Access_ExecutionResultForBlockIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Flow_Access_AccessAPIClientMetadata.Methods.getExecutionResultForBlockID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetExecutionResultForBlockIDInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Flow_Access_AccessAPIAsyncClient: Flow_Access_AccessAPIAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

public protocol Flow_Access_AccessAPIClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'ping'.
  func makePingInterceptors() -> [ClientInterceptor<Flow_Access_PingRequest, Flow_Access_PingResponse>]

  /// - Returns: Interceptors to use when invoking 'getLatestBlockHeader'.
  func makeGetLatestBlockHeaderInterceptors() -> [ClientInterceptor<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockHeaderByID'.
  func makeGetBlockHeaderByIDInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockHeaderByHeight'.
  func makeGetBlockHeaderByHeightInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse>]

  /// - Returns: Interceptors to use when invoking 'getLatestBlock'.
  func makeGetLatestBlockInterceptors() -> [ClientInterceptor<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockByID'.
  func makeGetBlockByIDInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockByHeight'.
  func makeGetBlockByHeightInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse>]

  /// - Returns: Interceptors to use when invoking 'getCollectionByID'.
  func makeGetCollectionByIDInterceptors() -> [ClientInterceptor<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse>]

  /// - Returns: Interceptors to use when invoking 'sendTransaction'.
  func makeSendTransactionInterceptors() -> [ClientInterceptor<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransaction'.
  func makeGetTransactionInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionResult'.
  func makeGetTransactionResultInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionResultByIndex'.
  func makeGetTransactionResultByIndexInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionResultsByBlockID'.
  func makeGetTransactionResultsByBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionsByBlockID'.
  func makeGetTransactionsByBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccount'.
  func makeGetAccountInterceptors() -> [ClientInterceptor<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccountAtLatestBlock'.
  func makeGetAccountAtLatestBlockInterceptors() -> [ClientInterceptor<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccountAtBlockHeight'.
  func makeGetAccountAtBlockHeightInterceptors() -> [ClientInterceptor<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse>]

  /// - Returns: Interceptors to use when invoking 'executeScriptAtLatestBlock'.
  func makeExecuteScriptAtLatestBlockInterceptors() -> [ClientInterceptor<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'executeScriptAtBlockID'.
  func makeExecuteScriptAtBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'executeScriptAtBlockHeight'.
  func makeExecuteScriptAtBlockHeightInterceptors() -> [ClientInterceptor<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'getEventsForHeightRange'.
  func makeGetEventsForHeightRangeInterceptors() -> [ClientInterceptor<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse>]

  /// - Returns: Interceptors to use when invoking 'getEventsForBlockIDs'.
  func makeGetEventsForBlockIDsInterceptors() -> [ClientInterceptor<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse>]

  /// - Returns: Interceptors to use when invoking 'getNetworkParameters'.
  func makeGetNetworkParametersInterceptors() -> [ClientInterceptor<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse>]

  /// - Returns: Interceptors to use when invoking 'getLatestProtocolStateSnapshot'.
  func makeGetLatestProtocolStateSnapshotInterceptors() -> [ClientInterceptor<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse>]

  /// - Returns: Interceptors to use when invoking 'getExecutionResultForBlockID'.
  func makeGetExecutionResultForBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse>]
}

public enum Flow_Access_AccessAPIClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "AccessAPI",
    fullName: "flow.access.AccessAPI",
    methods: [
      Flow_Access_AccessAPIClientMetadata.Methods.ping,
      Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlockHeader,
      Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByID,
      Flow_Access_AccessAPIClientMetadata.Methods.getBlockHeaderByHeight,
      Flow_Access_AccessAPIClientMetadata.Methods.getLatestBlock,
      Flow_Access_AccessAPIClientMetadata.Methods.getBlockByID,
      Flow_Access_AccessAPIClientMetadata.Methods.getBlockByHeight,
      Flow_Access_AccessAPIClientMetadata.Methods.getCollectionByID,
      Flow_Access_AccessAPIClientMetadata.Methods.sendTransaction,
      Flow_Access_AccessAPIClientMetadata.Methods.getTransaction,
      Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResult,
      Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultByIndex,
      Flow_Access_AccessAPIClientMetadata.Methods.getTransactionResultsByBlockID,
      Flow_Access_AccessAPIClientMetadata.Methods.getTransactionsByBlockID,
      Flow_Access_AccessAPIClientMetadata.Methods.getAccount,
      Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtLatestBlock,
      Flow_Access_AccessAPIClientMetadata.Methods.getAccountAtBlockHeight,
      Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtLatestBlock,
      Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockID,
      Flow_Access_AccessAPIClientMetadata.Methods.executeScriptAtBlockHeight,
      Flow_Access_AccessAPIClientMetadata.Methods.getEventsForHeightRange,
      Flow_Access_AccessAPIClientMetadata.Methods.getEventsForBlockIDs,
      Flow_Access_AccessAPIClientMetadata.Methods.getNetworkParameters,
      Flow_Access_AccessAPIClientMetadata.Methods.getLatestProtocolStateSnapshot,
      Flow_Access_AccessAPIClientMetadata.Methods.getExecutionResultForBlockID,
    ]
  )

  public enum Methods {
    public static let ping = GRPCMethodDescriptor(
      name: "Ping",
      path: "/flow.access.AccessAPI/Ping",
      type: GRPCCallType.unary
    )

    public static let getLatestBlockHeader = GRPCMethodDescriptor(
      name: "GetLatestBlockHeader",
      path: "/flow.access.AccessAPI/GetLatestBlockHeader",
      type: GRPCCallType.unary
    )

    public static let getBlockHeaderByID = GRPCMethodDescriptor(
      name: "GetBlockHeaderByID",
      path: "/flow.access.AccessAPI/GetBlockHeaderByID",
      type: GRPCCallType.unary
    )

    public static let getBlockHeaderByHeight = GRPCMethodDescriptor(
      name: "GetBlockHeaderByHeight",
      path: "/flow.access.AccessAPI/GetBlockHeaderByHeight",
      type: GRPCCallType.unary
    )

    public static let getLatestBlock = GRPCMethodDescriptor(
      name: "GetLatestBlock",
      path: "/flow.access.AccessAPI/GetLatestBlock",
      type: GRPCCallType.unary
    )

    public static let getBlockByID = GRPCMethodDescriptor(
      name: "GetBlockByID",
      path: "/flow.access.AccessAPI/GetBlockByID",
      type: GRPCCallType.unary
    )

    public static let getBlockByHeight = GRPCMethodDescriptor(
      name: "GetBlockByHeight",
      path: "/flow.access.AccessAPI/GetBlockByHeight",
      type: GRPCCallType.unary
    )

    public static let getCollectionByID = GRPCMethodDescriptor(
      name: "GetCollectionByID",
      path: "/flow.access.AccessAPI/GetCollectionByID",
      type: GRPCCallType.unary
    )

    public static let sendTransaction = GRPCMethodDescriptor(
      name: "SendTransaction",
      path: "/flow.access.AccessAPI/SendTransaction",
      type: GRPCCallType.unary
    )

    public static let getTransaction = GRPCMethodDescriptor(
      name: "GetTransaction",
      path: "/flow.access.AccessAPI/GetTransaction",
      type: GRPCCallType.unary
    )

    public static let getTransactionResult = GRPCMethodDescriptor(
      name: "GetTransactionResult",
      path: "/flow.access.AccessAPI/GetTransactionResult",
      type: GRPCCallType.unary
    )

    public static let getTransactionResultByIndex = GRPCMethodDescriptor(
      name: "GetTransactionResultByIndex",
      path: "/flow.access.AccessAPI/GetTransactionResultByIndex",
      type: GRPCCallType.unary
    )

    public static let getTransactionResultsByBlockID = GRPCMethodDescriptor(
      name: "GetTransactionResultsByBlockID",
      path: "/flow.access.AccessAPI/GetTransactionResultsByBlockID",
      type: GRPCCallType.unary
    )

    public static let getTransactionsByBlockID = GRPCMethodDescriptor(
      name: "GetTransactionsByBlockID",
      path: "/flow.access.AccessAPI/GetTransactionsByBlockID",
      type: GRPCCallType.unary
    )

    public static let getAccount = GRPCMethodDescriptor(
      name: "GetAccount",
      path: "/flow.access.AccessAPI/GetAccount",
      type: GRPCCallType.unary
    )

    public static let getAccountAtLatestBlock = GRPCMethodDescriptor(
      name: "GetAccountAtLatestBlock",
      path: "/flow.access.AccessAPI/GetAccountAtLatestBlock",
      type: GRPCCallType.unary
    )

    public static let getAccountAtBlockHeight = GRPCMethodDescriptor(
      name: "GetAccountAtBlockHeight",
      path: "/flow.access.AccessAPI/GetAccountAtBlockHeight",
      type: GRPCCallType.unary
    )

    public static let executeScriptAtLatestBlock = GRPCMethodDescriptor(
      name: "ExecuteScriptAtLatestBlock",
      path: "/flow.access.AccessAPI/ExecuteScriptAtLatestBlock",
      type: GRPCCallType.unary
    )

    public static let executeScriptAtBlockID = GRPCMethodDescriptor(
      name: "ExecuteScriptAtBlockID",
      path: "/flow.access.AccessAPI/ExecuteScriptAtBlockID",
      type: GRPCCallType.unary
    )

    public static let executeScriptAtBlockHeight = GRPCMethodDescriptor(
      name: "ExecuteScriptAtBlockHeight",
      path: "/flow.access.AccessAPI/ExecuteScriptAtBlockHeight",
      type: GRPCCallType.unary
    )

    public static let getEventsForHeightRange = GRPCMethodDescriptor(
      name: "GetEventsForHeightRange",
      path: "/flow.access.AccessAPI/GetEventsForHeightRange",
      type: GRPCCallType.unary
    )

    public static let getEventsForBlockIDs = GRPCMethodDescriptor(
      name: "GetEventsForBlockIDs",
      path: "/flow.access.AccessAPI/GetEventsForBlockIDs",
      type: GRPCCallType.unary
    )

    public static let getNetworkParameters = GRPCMethodDescriptor(
      name: "GetNetworkParameters",
      path: "/flow.access.AccessAPI/GetNetworkParameters",
      type: GRPCCallType.unary
    )

    public static let getLatestProtocolStateSnapshot = GRPCMethodDescriptor(
      name: "GetLatestProtocolStateSnapshot",
      path: "/flow.access.AccessAPI/GetLatestProtocolStateSnapshot",
      type: GRPCCallType.unary
    )

    public static let getExecutionResultForBlockID = GRPCMethodDescriptor(
      name: "GetExecutionResultForBlockID",
      path: "/flow.access.AccessAPI/GetExecutionResultForBlockID",
      type: GRPCCallType.unary
    )
  }
}

