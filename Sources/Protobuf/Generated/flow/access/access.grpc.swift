//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: flow/access/access.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// AccessAPI is the public-facing API provided by access nodes.
///
/// Usage: instantiate `Flow_Access_AccessAPIClient`, then call methods of this protocol to make API calls.
public protocol Flow_Access_AccessAPIClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? { get }

  func ping(
    _ request: Flow_Access_PingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_PingRequest, Flow_Access_PingResponse>

  func getLatestBlockHeader(
    _ request: Flow_Access_GetLatestBlockHeaderRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse>

  func getBlockHeaderByID(
    _ request: Flow_Access_GetBlockHeaderByIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse>

  func getBlockHeaderByHeight(
    _ request: Flow_Access_GetBlockHeaderByHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse>

  func getLatestBlock(
    _ request: Flow_Access_GetLatestBlockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse>

  func getBlockByID(
    _ request: Flow_Access_GetBlockByIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse>

  func getBlockByHeight(
    _ request: Flow_Access_GetBlockByHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse>

  func getCollectionByID(
    _ request: Flow_Access_GetCollectionByIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse>

  func sendTransaction(
    _ request: Flow_Access_SendTransactionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse>

  func getTransaction(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse>

  func getTransactionResult(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse>

  func getTransactionResultByIndex(
    _ request: Flow_Access_GetTransactionByIndexRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse>

  func getTransactionResultsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse>

  func getTransactionsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse>

  func getAccount(
    _ request: Flow_Access_GetAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse>

  func getAccountAtLatestBlock(
    _ request: Flow_Access_GetAccountAtLatestBlockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse>

  func getAccountAtBlockHeight(
    _ request: Flow_Access_GetAccountAtBlockHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse>

  func executeScriptAtLatestBlock(
    _ request: Flow_Access_ExecuteScriptAtLatestBlockRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse>

  func executeScriptAtBlockID(
    _ request: Flow_Access_ExecuteScriptAtBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse>

  func executeScriptAtBlockHeight(
    _ request: Flow_Access_ExecuteScriptAtBlockHeightRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse>

  func getEventsForHeightRange(
    _ request: Flow_Access_GetEventsForHeightRangeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse>

  func getEventsForBlockIDs(
    _ request: Flow_Access_GetEventsForBlockIDsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse>

  func getNetworkParameters(
    _ request: Flow_Access_GetNetworkParametersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse>

  func getLatestProtocolStateSnapshot(
    _ request: Flow_Access_GetLatestProtocolStateSnapshotRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse>

  func getExecutionResultForBlockID(
    _ request: Flow_Access_GetExecutionResultForBlockIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse>
}

extension Flow_Access_AccessAPIClientProtocol {
  public var serviceName: String {
    return "flow.access.AccessAPI"
  }

  /// Ping is used to check if the access node is alive and healthy.
  ///
  /// - Parameters:
  ///   - request: Request to send to Ping.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func ping(
    _ request: Flow_Access_PingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_PingRequest, Flow_Access_PingResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/Ping",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  /// GetLatestBlockHeader gets the latest sealed or unsealed block header.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLatestBlockHeader.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLatestBlockHeader(
    _ request: Flow_Access_GetLatestBlockHeaderRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetLatestBlockHeader",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockHeaderInterceptors() ?? []
    )
  }

  /// GetBlockHeaderByID gets a block header by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockHeaderByID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockHeaderByID(
    _ request: Flow_Access_GetBlockHeaderByIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetBlockHeaderByID",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByIDInterceptors() ?? []
    )
  }

  /// GetBlockHeaderByHeight gets a block header by height.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockHeaderByHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockHeaderByHeight(
    _ request: Flow_Access_GetBlockHeaderByHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetBlockHeaderByHeight",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockHeaderByHeightInterceptors() ?? []
    )
  }

  /// GetLatestBlock gets the full payload of the latest sealed or unsealed
  /// block.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLatestBlock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLatestBlock(
    _ request: Flow_Access_GetLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetLatestBlock",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestBlockInterceptors() ?? []
    )
  }

  /// GetBlockByID gets a full block by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockByID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockByID(
    _ request: Flow_Access_GetBlockByIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetBlockByID",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByIDInterceptors() ?? []
    )
  }

  /// GetBlockByHeight gets a full block by height.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBlockByHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBlockByHeight(
    _ request: Flow_Access_GetBlockByHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetBlockByHeight",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBlockByHeightInterceptors() ?? []
    )
  }

  /// GetCollectionByID gets a collection by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCollectionByID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCollectionByID(
    _ request: Flow_Access_GetCollectionByIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetCollectionByID",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCollectionByIDInterceptors() ?? []
    )
  }

  /// SendTransaction submits a transaction to the network.
  ///
  /// - Parameters:
  ///   - request: Request to send to SendTransaction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func sendTransaction(
    _ request: Flow_Access_SendTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/SendTransaction",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendTransactionInterceptors() ?? []
    )
  }

  /// GetTransaction gets a transaction by ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransaction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransaction(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetTransaction",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionInterceptors() ?? []
    )
  }

  /// GetTransactionResult gets the result of a transaction.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionResult.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionResult(
    _ request: Flow_Access_GetTransactionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetTransactionResult",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultInterceptors() ?? []
    )
  }

  /// GetTransactionResultByIndex gets the result of a transaction at a specified
  /// block and index
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionResultByIndex.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionResultByIndex(
    _ request: Flow_Access_GetTransactionByIndexRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetTransactionResultByIndex",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultByIndexInterceptors() ?? []
    )
  }

  /// GetTransactionResultsByBlockID gets all the transaction results for a
  /// specified block
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionResultsByBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionResultsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetTransactionResultsByBlockID",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionResultsByBlockIDInterceptors() ?? []
    )
  }

  /// GetTransactionsByBlockID gets all the transactions for a specified block
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransactionsByBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransactionsByBlockID(
    _ request: Flow_Access_GetTransactionsByBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetTransactionsByBlockID",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTransactionsByBlockIDInterceptors() ?? []
    )
  }

  /// GetAccount is an alias for GetAccountAtLatestBlock.
  ///
  /// Warning: this function is deprecated. It behaves identically to
  /// GetAccountAtLatestBlock and will be removed in a future version.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccount(
    _ request: Flow_Access_GetAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountInterceptors() ?? []
    )
  }

  /// GetAccountAtLatestBlock gets an account by address from the latest sealed
  /// execution state.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccountAtLatestBlock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccountAtLatestBlock(
    _ request: Flow_Access_GetAccountAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetAccountAtLatestBlock",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtLatestBlockInterceptors() ?? []
    )
  }

  /// GetAccountAtBlockHeight gets an account by address at the given block
  /// height
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAccountAtBlockHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAccountAtBlockHeight(
    _ request: Flow_Access_GetAccountAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetAccountAtBlockHeight",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAccountAtBlockHeightInterceptors() ?? []
    )
  }

  /// ExecuteScriptAtLatestBlock executes a read-only Cadence script against the
  /// latest sealed execution state.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteScriptAtLatestBlock.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func executeScriptAtLatestBlock(
    _ request: Flow_Access_ExecuteScriptAtLatestBlockRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/ExecuteScriptAtLatestBlock",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtLatestBlockInterceptors() ?? []
    )
  }

  /// ExecuteScriptAtBlockID executes a ready-only Cadence script against the
  /// execution state at the block with the given ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteScriptAtBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func executeScriptAtBlockID(
    _ request: Flow_Access_ExecuteScriptAtBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/ExecuteScriptAtBlockID",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockIDInterceptors() ?? []
    )
  }

  /// ExecuteScriptAtBlockHeight executes a ready-only Cadence script against the
  /// execution state at the given block height.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteScriptAtBlockHeight.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func executeScriptAtBlockHeight(
    _ request: Flow_Access_ExecuteScriptAtBlockHeightRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/ExecuteScriptAtBlockHeight",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExecuteScriptAtBlockHeightInterceptors() ?? []
    )
  }

  /// GetEventsForHeightRange retrieves events emitted within the specified block
  /// range.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEventsForHeightRange.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEventsForHeightRange(
    _ request: Flow_Access_GetEventsForHeightRangeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetEventsForHeightRange",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForHeightRangeInterceptors() ?? []
    )
  }

  /// GetEventsForBlockIDs retrieves events for the specified block IDs and event
  /// type.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEventsForBlockIDs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEventsForBlockIDs(
    _ request: Flow_Access_GetEventsForBlockIDsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetEventsForBlockIDs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetEventsForBlockIDsInterceptors() ?? []
    )
  }

  /// GetNetworkParameters retrieves the Flow network details
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNetworkParameters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNetworkParameters(
    _ request: Flow_Access_GetNetworkParametersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetNetworkParameters",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNetworkParametersInterceptors() ?? []
    )
  }

  /// GetLatestProtocolStateSnapshot retrieves the latest sealed protocol state
  /// snapshot. Used by Flow nodes joining the network to bootstrap a
  /// space-efficient local state.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLatestProtocolStateSnapshot.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLatestProtocolStateSnapshot(
    _ request: Flow_Access_GetLatestProtocolStateSnapshotRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetLatestProtocolStateSnapshot",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLatestProtocolStateSnapshotInterceptors() ?? []
    )
  }

  /// GetExecutionResultForBlockID returns Execution Result for a given block.
  /// At present, Access Node might not have execution results for every block
  /// and as usual, until sealed, this data can change
  ///
  /// - Parameters:
  ///   - request: Request to send to GetExecutionResultForBlockID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getExecutionResultForBlockID(
    _ request: Flow_Access_GetExecutionResultForBlockIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse> {
    return self.makeUnaryCall(
      path: "/flow.access.AccessAPI/GetExecutionResultForBlockID",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetExecutionResultForBlockIDInterceptors() ?? []
    )
  }
}

public protocol Flow_Access_AccessAPIClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'ping'.
  func makePingInterceptors() -> [ClientInterceptor<Flow_Access_PingRequest, Flow_Access_PingResponse>]

  /// - Returns: Interceptors to use when invoking 'getLatestBlockHeader'.
  func makeGetLatestBlockHeaderInterceptors() -> [ClientInterceptor<Flow_Access_GetLatestBlockHeaderRequest, Flow_Access_BlockHeaderResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockHeaderByID'.
  func makeGetBlockHeaderByIDInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockHeaderByIDRequest, Flow_Access_BlockHeaderResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockHeaderByHeight'.
  func makeGetBlockHeaderByHeightInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockHeaderByHeightRequest, Flow_Access_BlockHeaderResponse>]

  /// - Returns: Interceptors to use when invoking 'getLatestBlock'.
  func makeGetLatestBlockInterceptors() -> [ClientInterceptor<Flow_Access_GetLatestBlockRequest, Flow_Access_BlockResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockByID'.
  func makeGetBlockByIDInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockByIDRequest, Flow_Access_BlockResponse>]

  /// - Returns: Interceptors to use when invoking 'getBlockByHeight'.
  func makeGetBlockByHeightInterceptors() -> [ClientInterceptor<Flow_Access_GetBlockByHeightRequest, Flow_Access_BlockResponse>]

  /// - Returns: Interceptors to use when invoking 'getCollectionByID'.
  func makeGetCollectionByIDInterceptors() -> [ClientInterceptor<Flow_Access_GetCollectionByIDRequest, Flow_Access_CollectionResponse>]

  /// - Returns: Interceptors to use when invoking 'sendTransaction'.
  func makeSendTransactionInterceptors() -> [ClientInterceptor<Flow_Access_SendTransactionRequest, Flow_Access_SendTransactionResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransaction'.
  func makeGetTransactionInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionResult'.
  func makeGetTransactionResultInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionRequest, Flow_Access_TransactionResultResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionResultByIndex'.
  func makeGetTransactionResultByIndexInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionByIndexRequest, Flow_Access_TransactionResultResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionResultsByBlockID'.
  func makeGetTransactionResultsByBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionResultsResponse>]

  /// - Returns: Interceptors to use when invoking 'getTransactionsByBlockID'.
  func makeGetTransactionsByBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_GetTransactionsByBlockIDRequest, Flow_Access_TransactionsResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccount'.
  func makeGetAccountInterceptors() -> [ClientInterceptor<Flow_Access_GetAccountRequest, Flow_Access_GetAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccountAtLatestBlock'.
  func makeGetAccountAtLatestBlockInterceptors() -> [ClientInterceptor<Flow_Access_GetAccountAtLatestBlockRequest, Flow_Access_AccountResponse>]

  /// - Returns: Interceptors to use when invoking 'getAccountAtBlockHeight'.
  func makeGetAccountAtBlockHeightInterceptors() -> [ClientInterceptor<Flow_Access_GetAccountAtBlockHeightRequest, Flow_Access_AccountResponse>]

  /// - Returns: Interceptors to use when invoking 'executeScriptAtLatestBlock'.
  func makeExecuteScriptAtLatestBlockInterceptors() -> [ClientInterceptor<Flow_Access_ExecuteScriptAtLatestBlockRequest, Flow_Access_ExecuteScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'executeScriptAtBlockID'.
  func makeExecuteScriptAtBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_ExecuteScriptAtBlockIDRequest, Flow_Access_ExecuteScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'executeScriptAtBlockHeight'.
  func makeExecuteScriptAtBlockHeightInterceptors() -> [ClientInterceptor<Flow_Access_ExecuteScriptAtBlockHeightRequest, Flow_Access_ExecuteScriptResponse>]

  /// - Returns: Interceptors to use when invoking 'getEventsForHeightRange'.
  func makeGetEventsForHeightRangeInterceptors() -> [ClientInterceptor<Flow_Access_GetEventsForHeightRangeRequest, Flow_Access_EventsResponse>]

  /// - Returns: Interceptors to use when invoking 'getEventsForBlockIDs'.
  func makeGetEventsForBlockIDsInterceptors() -> [ClientInterceptor<Flow_Access_GetEventsForBlockIDsRequest, Flow_Access_EventsResponse>]

  /// - Returns: Interceptors to use when invoking 'getNetworkParameters'.
  func makeGetNetworkParametersInterceptors() -> [ClientInterceptor<Flow_Access_GetNetworkParametersRequest, Flow_Access_GetNetworkParametersResponse>]

  /// - Returns: Interceptors to use when invoking 'getLatestProtocolStateSnapshot'.
  func makeGetLatestProtocolStateSnapshotInterceptors() -> [ClientInterceptor<Flow_Access_GetLatestProtocolStateSnapshotRequest, Flow_Access_ProtocolStateSnapshotResponse>]

  /// - Returns: Interceptors to use when invoking 'getExecutionResultForBlockID'.
  func makeGetExecutionResultForBlockIDInterceptors() -> [ClientInterceptor<Flow_Access_GetExecutionResultForBlockIDRequest, Flow_Access_ExecutionResultForBlockIDResponse>]
}

public final class Flow_Access_AccessAPIClient: Flow_Access_AccessAPIClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol?

  /// Creates a client for the flow.access.AccessAPI service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Flow_Access_AccessAPIClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

